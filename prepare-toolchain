#!/bin/bash
set -e
shopt -s extglob
cd "$(dirname "$0")"

if [[ $# -ne 2 ]]; then 
	echo "Usage: $0 <version> <path to correct Xcode.app>"
	exit 1
fi

export DEVELOPER_DIR="$2/Contents/Developer/"

info() { echo "[info] $1"; }

version="$1"
file_name="swift-${version}-RELEASE-osx"
package="${file_name}-package.pkg"

mkdir -p toolchains
cd toolchains
info "Downloading macOS toolchain"
if [[ ! -f "toolchain-${version}.pkg" ]]; then
	curl -#o "toolchain-${version}.pkg" "https://swift.org/builds/swift-${version}-release/xcode/swift-${version}-RELEASE/${file_name}.pkg"
fi

info "Unpacking toolchain"
# remove any pre-existing usr dir first
rm -rf usr
xar -xf "toolchain-${version}.pkg" "${package}/Payload"
tar -xzf "${package}/Payload" "usr"
rm -rf "${package}"

info "Modifying macOS toolchain"
cd usr
rm -rf bin lib/libclang.dylib lib/sourcekitd.framework lib/libswiftDemangle.dylib lib/swift/!(clang|iphoneos|shims|migrator) lib/swift_static/!(iphoneos) libexec local
cd lib/swift/iphoneos
for file in libswift*.dylib; do
	# symlink to the libswift package
	ln -fs "/usr/lib/libswift/${version}/${file}" "${file}"
done
cd ../../../..

info "Installing dependencies"
type brew &>/dev/null || ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
type cmake &>/dev/null || brew install cmake
type ninja &>/dev/null || brew install ninja

info "Checking out Swift repo"

if [[ -d swift-source ]]; then
	rm -rf swift-source
fi

mkdir swift-source
cd swift-source
git clone https://github.com/apple/swift.git
swift/utils/update-checkout --clone --tag "swift-${version}-RELEASE"

ln -s ./llvm-project/llvm ./llvm
ln -s ./llvm-project/clang ./clang

# patch clang
info "Patching Clang"
sed -i '' -e 's;__has_include(<CoreServices/CoreServices.h>);__has_include(<FSEvents/FSEvents.h>);g' clang/lib/DirectoryWatcher/DirectoryWatcher.cpp

# compile swift
# see here for preset info: https://github.com/apple/swift/blob/master/utils/build-presets.ini#L2105
info "Compiling Swift"
./swift/utils/build-script --preset "buildbot_iphoneos_arm64_crosscompiler"
cd ..

info "Merging toolchains"
cp -a "swift-source/output/merged-hosts/usr/bin" usr/
cp "swift-source/output/merged-hosts/usr/lib/libswiftDemangle.dylib" usr/lib/
cd usr/
# Codesign any Mach-O files, also adding the correct entitlements
find . \( -type f \( -name '*.dylib' -or \( -path './bin/*' -not -name '*.py' \) \) -or \( -path '*.framework/*' -not -name '*.*' \) -not -name '.DS_Store' \) -print0 | xargs -0 -I{} sh -c "ldid -S../../ent.xml {} || :"

function copy_file() {
	mkdir -p share/swift_stash/"$(dirname "$1")"
	mv "$1" share/swift_stash/"$(dirname "$1")"
	ln -fs /usr/share/swift_stash/"$1" "$1"
}

export -f copy_file

find . -type f -print0 | xargs -0 -I{} sh -c 'copy_file {}'

cd ..
mv usr "usr-${version}"

echo "${version}" > .version
